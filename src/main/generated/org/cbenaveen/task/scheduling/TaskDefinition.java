/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.cbenaveen.task.scheduling;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TaskDefinition extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6633169435390828136L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TaskDefinition\",\"namespace\":\"org.cbenaveen.task.scheduling\",\"fields\":[{\"name\":\"customerId\",\"type\":\"string\"},{\"name\":\"taskName\",\"type\":\"string\"},{\"name\":\"frequency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TaskFrequency\",\"fields\":[{\"name\":\"frequencyTimeUnit\",\"type\":{\"type\":\"enum\",\"name\":\"TaskFrequencyTimeUnits\",\"symbols\":[\"MILLISECONDS\",\"SECONDS\",\"MINUTES\",\"HOURS\",\"DAYS\",\"WEEKS\"]}},{\"name\":\"time\",\"type\":\"int\"}]}],\"default\":null},{\"name\":\"config\",\"type\":{\"type\":\"record\",\"name\":\"TaskConfiguration\",\"fields\":[{\"name\":\"outputTopic\",\"type\":\"string\"},{\"name\":\"configurations\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"default\":null}]}},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TaskDefinition> ENCODER =
      new BinaryMessageEncoder<TaskDefinition>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TaskDefinition> DECODER =
      new BinaryMessageDecoder<TaskDefinition>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TaskDefinition> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TaskDefinition> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TaskDefinition>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TaskDefinition to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TaskDefinition from a ByteBuffer. */
  public static TaskDefinition fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence customerId;
  @Deprecated public java.lang.CharSequence taskName;
  @Deprecated public org.cbenaveen.task.scheduling.TaskFrequency frequency;
  @Deprecated public org.cbenaveen.task.scheduling.TaskConfiguration config;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> data;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TaskDefinition() {}

  /**
   * All-args constructor.
   * @param customerId The new value for customerId
   * @param taskName The new value for taskName
   * @param frequency The new value for frequency
   * @param config The new value for config
   * @param data The new value for data
   */
  public TaskDefinition(java.lang.CharSequence customerId, java.lang.CharSequence taskName, org.cbenaveen.task.scheduling.TaskFrequency frequency, org.cbenaveen.task.scheduling.TaskConfiguration config, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> data) {
    this.customerId = customerId;
    this.taskName = taskName;
    this.frequency = frequency;
    this.config = config;
    this.data = data;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return customerId;
    case 1: return taskName;
    case 2: return frequency;
    case 3: return config;
    case 4: return data;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: customerId = (java.lang.CharSequence)value$; break;
    case 1: taskName = (java.lang.CharSequence)value$; break;
    case 2: frequency = (org.cbenaveen.task.scheduling.TaskFrequency)value$; break;
    case 3: config = (org.cbenaveen.task.scheduling.TaskConfiguration)value$; break;
    case 4: data = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.CharSequence getCustomerId() {
    return customerId;
  }

  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.CharSequence value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'taskName' field.
   * @return The value of the 'taskName' field.
   */
  public java.lang.CharSequence getTaskName() {
    return taskName;
  }

  /**
   * Sets the value of the 'taskName' field.
   * @param value the value to set.
   */
  public void setTaskName(java.lang.CharSequence value) {
    this.taskName = value;
  }

  /**
   * Gets the value of the 'frequency' field.
   * @return The value of the 'frequency' field.
   */
  public org.cbenaveen.task.scheduling.TaskFrequency getFrequency() {
    return frequency;
  }

  /**
   * Sets the value of the 'frequency' field.
   * @param value the value to set.
   */
  public void setFrequency(org.cbenaveen.task.scheduling.TaskFrequency value) {
    this.frequency = value;
  }

  /**
   * Gets the value of the 'config' field.
   * @return The value of the 'config' field.
   */
  public org.cbenaveen.task.scheduling.TaskConfiguration getConfig() {
    return config;
  }

  /**
   * Sets the value of the 'config' field.
   * @param value the value to set.
   */
  public void setConfig(org.cbenaveen.task.scheduling.TaskConfiguration value) {
    this.config = value;
  }

  /**
   * Gets the value of the 'data' field.
   * @return The value of the 'data' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.data = value;
  }

  /**
   * Creates a new TaskDefinition RecordBuilder.
   * @return A new TaskDefinition RecordBuilder
   */
  public static org.cbenaveen.task.scheduling.TaskDefinition.Builder newBuilder() {
    return new org.cbenaveen.task.scheduling.TaskDefinition.Builder();
  }

  /**
   * Creates a new TaskDefinition RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TaskDefinition RecordBuilder
   */
  public static org.cbenaveen.task.scheduling.TaskDefinition.Builder newBuilder(org.cbenaveen.task.scheduling.TaskDefinition.Builder other) {
    return new org.cbenaveen.task.scheduling.TaskDefinition.Builder(other);
  }

  /**
   * Creates a new TaskDefinition RecordBuilder by copying an existing TaskDefinition instance.
   * @param other The existing instance to copy.
   * @return A new TaskDefinition RecordBuilder
   */
  public static org.cbenaveen.task.scheduling.TaskDefinition.Builder newBuilder(org.cbenaveen.task.scheduling.TaskDefinition other) {
    return new org.cbenaveen.task.scheduling.TaskDefinition.Builder(other);
  }

  /**
   * RecordBuilder for TaskDefinition instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TaskDefinition>
    implements org.apache.avro.data.RecordBuilder<TaskDefinition> {

    private java.lang.CharSequence customerId;
    private java.lang.CharSequence taskName;
    private org.cbenaveen.task.scheduling.TaskFrequency frequency;
    private org.cbenaveen.task.scheduling.TaskFrequency.Builder frequencyBuilder;
    private org.cbenaveen.task.scheduling.TaskConfiguration config;
    private org.cbenaveen.task.scheduling.TaskConfiguration.Builder configBuilder;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> data;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.cbenaveen.task.scheduling.TaskDefinition.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.customerId)) {
        this.customerId = data().deepCopy(fields()[0].schema(), other.customerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.taskName)) {
        this.taskName = data().deepCopy(fields()[1].schema(), other.taskName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.frequency)) {
        this.frequency = data().deepCopy(fields()[2].schema(), other.frequency);
        fieldSetFlags()[2] = true;
      }
      if (other.hasFrequencyBuilder()) {
        this.frequencyBuilder = org.cbenaveen.task.scheduling.TaskFrequency.newBuilder(other.getFrequencyBuilder());
      }
      if (isValidValue(fields()[3], other.config)) {
        this.config = data().deepCopy(fields()[3].schema(), other.config);
        fieldSetFlags()[3] = true;
      }
      if (other.hasConfigBuilder()) {
        this.configBuilder = org.cbenaveen.task.scheduling.TaskConfiguration.newBuilder(other.getConfigBuilder());
      }
      if (isValidValue(fields()[4], other.data)) {
        this.data = data().deepCopy(fields()[4].schema(), other.data);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TaskDefinition instance
     * @param other The existing instance to copy.
     */
    private Builder(org.cbenaveen.task.scheduling.TaskDefinition other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.customerId)) {
        this.customerId = data().deepCopy(fields()[0].schema(), other.customerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.taskName)) {
        this.taskName = data().deepCopy(fields()[1].schema(), other.taskName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.frequency)) {
        this.frequency = data().deepCopy(fields()[2].schema(), other.frequency);
        fieldSetFlags()[2] = true;
      }
      this.frequencyBuilder = null;
      if (isValidValue(fields()[3], other.config)) {
        this.config = data().deepCopy(fields()[3].schema(), other.config);
        fieldSetFlags()[3] = true;
      }
      this.configBuilder = null;
      if (isValidValue(fields()[4], other.data)) {
        this.data = data().deepCopy(fields()[4].schema(), other.data);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerId() {
      return customerId;
    }

    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder setCustomerId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.customerId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'taskName' field.
      * @return The value.
      */
    public java.lang.CharSequence getTaskName() {
      return taskName;
    }

    /**
      * Sets the value of the 'taskName' field.
      * @param value The value of 'taskName'.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder setTaskName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.taskName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'taskName' field has been set.
      * @return True if the 'taskName' field has been set, false otherwise.
      */
    public boolean hasTaskName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'taskName' field.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder clearTaskName() {
      taskName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'frequency' field.
      * @return The value.
      */
    public org.cbenaveen.task.scheduling.TaskFrequency getFrequency() {
      return frequency;
    }

    /**
      * Sets the value of the 'frequency' field.
      * @param value The value of 'frequency'.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder setFrequency(org.cbenaveen.task.scheduling.TaskFrequency value) {
      validate(fields()[2], value);
      this.frequencyBuilder = null;
      this.frequency = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'frequency' field has been set.
      * @return True if the 'frequency' field has been set, false otherwise.
      */
    public boolean hasFrequency() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'frequency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.cbenaveen.task.scheduling.TaskFrequency.Builder getFrequencyBuilder() {
      if (frequencyBuilder == null) {
        if (hasFrequency()) {
          setFrequencyBuilder(org.cbenaveen.task.scheduling.TaskFrequency.newBuilder(frequency));
        } else {
          setFrequencyBuilder(org.cbenaveen.task.scheduling.TaskFrequency.newBuilder());
        }
      }
      return frequencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'frequency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder setFrequencyBuilder(org.cbenaveen.task.scheduling.TaskFrequency.Builder value) {
      clearFrequency();
      frequencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'frequency' field has an active Builder instance
     * @return True if the 'frequency' field has an active Builder instance
     */
    public boolean hasFrequencyBuilder() {
      return frequencyBuilder != null;
    }

    /**
      * Clears the value of the 'frequency' field.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder clearFrequency() {
      frequency = null;
      frequencyBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'config' field.
      * @return The value.
      */
    public org.cbenaveen.task.scheduling.TaskConfiguration getConfig() {
      return config;
    }

    /**
      * Sets the value of the 'config' field.
      * @param value The value of 'config'.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder setConfig(org.cbenaveen.task.scheduling.TaskConfiguration value) {
      validate(fields()[3], value);
      this.configBuilder = null;
      this.config = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'config' field has been set.
      * @return True if the 'config' field has been set, false otherwise.
      */
    public boolean hasConfig() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'config' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.cbenaveen.task.scheduling.TaskConfiguration.Builder getConfigBuilder() {
      if (configBuilder == null) {
        if (hasConfig()) {
          setConfigBuilder(org.cbenaveen.task.scheduling.TaskConfiguration.newBuilder(config));
        } else {
          setConfigBuilder(org.cbenaveen.task.scheduling.TaskConfiguration.newBuilder());
        }
      }
      return configBuilder;
    }

    /**
     * Sets the Builder instance for the 'config' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder setConfigBuilder(org.cbenaveen.task.scheduling.TaskConfiguration.Builder value) {
      clearConfig();
      configBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'config' field has an active Builder instance
     * @return True if the 'config' field has an active Builder instance
     */
    public boolean hasConfigBuilder() {
      return configBuilder != null;
    }

    /**
      * Clears the value of the 'config' field.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder clearConfig() {
      config = null;
      configBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'data' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getData() {
      return data;
    }

    /**
      * Sets the value of the 'data' field.
      * @param value The value of 'data'.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder setData(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.data = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'data' field.
      * @return This builder.
      */
    public org.cbenaveen.task.scheduling.TaskDefinition.Builder clearData() {
      data = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TaskDefinition build() {
      try {
        TaskDefinition record = new TaskDefinition();
        record.customerId = fieldSetFlags()[0] ? this.customerId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.taskName = fieldSetFlags()[1] ? this.taskName : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (frequencyBuilder != null) {
          record.frequency = this.frequencyBuilder.build();
        } else {
          record.frequency = fieldSetFlags()[2] ? this.frequency : (org.cbenaveen.task.scheduling.TaskFrequency) defaultValue(fields()[2]);
        }
        if (configBuilder != null) {
          record.config = this.configBuilder.build();
        } else {
          record.config = fieldSetFlags()[3] ? this.config : (org.cbenaveen.task.scheduling.TaskConfiguration) defaultValue(fields()[3]);
        }
        record.data = fieldSetFlags()[4] ? this.data : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TaskDefinition>
    WRITER$ = (org.apache.avro.io.DatumWriter<TaskDefinition>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TaskDefinition>
    READER$ = (org.apache.avro.io.DatumReader<TaskDefinition>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
